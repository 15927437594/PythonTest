# -*- coding: utf-8 -*-
"""
user:Created by jid on 2022/2/23 15:46
email:jid@hwtc.com.cn
description:
"""
import os
import time
from zlib import crc32

def iterable_str_to_hex(data):
    """
    将str数组转化为byte数组
    :param data: 原始str
    :return: byte数组
    """
    return [int(i, 16) for i in data]

if __name__ == '__main__':
    # analyzer_serial = serial.Serial('COM3', 115200, timeout=1)
    #
    # cmd = b'MES,0\r'
    # analyzer_serial.write(cmd)
    # line = analyzer_serial.readlines()
    # print(line)
    #
    # str = line[0].decode('utf-8')
    # print(str)
    # str = str.split(' ')
    # print(str)
    # str = str[1][0:-1]
    # str = str.split(';')
    # x = float(str[0]) / 10000
    # y = float(str[1]) / 10000
    # Lv = float(str[2])
    # ret = (x, y, Lv)
    # print(ret)

    capture_time = time.strftime("%Y-%m-%d-%H-%M-%S", time.localtime())
    print(capture_time)

    sn = 'dshugiawfbiesgb.wav'

    if sn.__contains__('.'):
        sn = sn.split('.')[0]

    record_time = time.strftime("%Y-%m-%d-%H-%M-%S", time.localtime())

    backup_path = os.path.join(os.getcwd(), 'backup')
    if not os.path.exists(backup_path):
        os.makedirs(backup_path)

    filename = os.path.join(backup_path, '%s_%s.wav' % (sn, record_time))
    print(filename)

str1 = 'w8@0x15 0x8E 0x01 0x64'  # 16进制，其实也是str
str2 = str1.split("@")
print(str2)
str3 = str2[1].split(" ")
print(str3)
res = 0x00
# 步长是2，两个16进制未是一个字节
for x in range(1, len(str3)):
    hex_str = int(str3[x], 16)  # 把16进制转10进制
    if x:
        # 第一个
        res ^= hex_str
    else:
        res = hex_str ^ 0

print(res)  # 0x20
print(hex(res))  # 20

a = [0.2882, 0.2897, 0.2901, 0.2903, 0.2904, 0.2905, 0.2906, 0.2906, 0.2906, 0.2906, 0.2907, 0.2906, 0.2909, 0.2906,
     0.2904, 0.2905, 0.2904, 0.2905, 0.2905, 0.2906, 0.2904, 0.2905, 0.2902, 0.2904, 0.2902, 0.2901, 0.2902, 0.2909,
     0.2882, 0.2893, 0.2886, 0.2876, 0.284, 0.2788]
print(len(a))

# data = '20 00 FF 00 00 0F 01 70 1F 02 50 2B 03 10 36 03 B0 41 04 90 51 05 90 5F 06 00 61 06 20 63 06 40 65 06 60 D8 0D 90 DA 0D B0 DC 0D D0 DE 0D F0 E0 0E 10 E2 0E 30 E4 0E 51 B4 1B 51 B6 1B 72 0B 20 C2 0D 20 E2 0F 21 02 50 25 12 52 25 32 54 25 52 56 25 72 58 25 92 5A 25 B2 5C 25 D2 5E 25 F2 60 26 12 62 26 32 64 26 52 66 26 72 68 26 92 6A 26 B2 6C 26 D2 6E 26 F2 70 27 12 72 27 32 74 27 52 76 27 72 78 27 92 7A 27 B2 7C 27 D2 7E 27 F2 80 28 12 82 28 32 84 28 52 86 28 72 88 28 92 8A 28 B2 8C 28 D2 8E 28 F2 90 29 12 92 29 32 94 29 52 96 29 72 98 29 92 9A 29 B8 53 85 48 55 85 68 57 85 88 59 85 A8 5B 85 C8 61 86 B8 6F 87 08 71 87 28 73 87 48 75 87 68 77 87 88 79 87 A8 7B 87 C8 7D 87 E9 42 94 39 44 94 59 46 94 79 48 94 99 4A 94 B9 4C 9B E9 BF 9C 09 C1 9C 29 C3 9F E9 FF A8 AA 8B A8 21 00 FF CA 8D AC AA CB AC CA CD AC EB 1D B1 EB 39 B3 AB 3B B3 CB 3D B3 EB 3F B4 0B 41 BD BB DF BE 0B E1 BE 2C 34 C3 5C 36 C3 7C 73 C7 4C 75 C7 6C 77 C7 8C 79 C7 AC 7B C8 5C 86 C8 7C 88 C8 9C 8A C8 BC 8C CE AC EB CE CD 55 D5 6D C5 DC 6D C8 DF ED FF E0 0E 01 E0 2E 03 E0 4E 05 E0 6E 07 E0 8E 09 E0 AE 0C E0 DE 0E E0 FE 16 E1 7E 18 EB 5E B6 EB 7E B8 EB 9E BA EB BE BC EB DE BE F0 AF 0B F8 2F 83 00 00 1D 02 C0 3A 04 60 51 05 B0 65 06 E0 79 08 70 96 0A 50 B1 0B 20 B3 0B 40 B5 0B 60 B7 0B 81 43 14 41 45 14 61 47 14 81 49 14 A1 4B 14 C1 4D 14 E1 4F 22 62 30 23 12 32 23 32 66 26 72 68 26 92 6A 26 B2 D3 2D 42 D5 2D 62 D7 2D 82 D9 2D A2 DB 2D C2 DD 2D E2 DF 2E 02 E1 2E 22 E3 2E 42 E5 2E 64 36 43 74 38 43 94 3A 43 B4 3C 43 D4 3E 43 F4 40 44 14 42 44 34 44 44 54 46 44 74 48 57 A5 22 00 FF 7B 57 C5 7D 57 E5 7F 58 05 81 58 25 83 58 45 85 58 65 87 58 85 89 58 A5 8B 58 C5 8D 58 E5 8F 59 05 91 59 25 93 59 45 95 59 65 97 59 85 99 59 A5 9B 59 C5 9D 59 E8 51 85 28 53 85 48 55 85 68 57 85 88 59 85 A8 5B 85 C8 5D 85 E8 5F 86 08 61 86 28 63 86 48 65 86 68 67 86 88 69 86 A9 49 94 A9 4B 94 C9 4D 94 E9 4F 95 09 51 95 29 53 95 49 F1 9F 59 F6 9F 79 F8 9F 99 FA A6 0A 61 A6 2A 63 A6 4A 65 A6 6A 9F AA 0A A1 AA 2A A3 AE 7A E8 B0 3B 04 B0 5B 06 B0 7B 08 B0 9B 0A B0 BB A0 BA 3B A4 BA 5B A6 BF 0B F1 BF 2B F3 C3 BC 3C C3 DC 3E C3 FC 40 C4 1C 42 C4 3C F2 CF 3C F4 CF 5C F6 CF 7C F8 D6 ED 6F D7 0D 88 D8 9D 8A D8 BD 8C D8 DD BF DC 0D C1 DC 2D C3 DC 4D C5 DC 6D C7 DC 8D C9 DC AD CB DC CD CD DC ED CF EF 7E F8 EF 9E FA EF BE FC EF DE FE EF FF 00 F0 1F 02 F8 8F 89 F8 AF 8B 23 00 FF 00 00 20 03 10 41 04 E0 5A 06 60 71 07 C0 88 09 80 A9 0B B0 C9 0C A0 CB 0C C0 CD 0C E0 CF 0D 01 58 15 91 5A 15 B1 5C 15 D1 5E 15 F1 60 16 11 62 16 31 64 24 62 47 24 82 49 24 A2 7E 27 F2 80 28 12 82 28 32 F0 2F 12 F2 2F 32 F4 2F 52 F6 2F 72 F8 2F 92 FA 2F B2 FC 2F D2 FE 2F F3 00 30 13 02 30 34 6E 46 F4 70 47 24 73 47 44 75 47 64 77 47 84 79 47 A4 7C 47 D4 7E 47 F4 80 48 14 82 5C 95 CA 5C B5 CC 5C D5 CE 5C F5 D0 5D 15 D2 5D 35 D4 5D 55 D6 5D 75 D8 5D 95 DA 5D B5 DC 5D D5 DE 5D F5 E0 5E 15 E2 5E 35 E4 5E 55 E6 5E 75 E8 5E 95 EA 5E B5 EC 5E D8 7F 88 08 81 88 28 83 88 48 85 88 68 87 88 88 89 88 A8 8B 88 C8 8D 88 E8 8F 89 08 91 89 28 93 89 48 95 89 68 97 89 89 7C 97 D9 7E 97 F9 80 98 19 82 98 39 84 98 59 86 98 7A 2C A2 EA 2F A3 0A 31 A3 2A 33 A8 EA 8F A9 2A 93 A9 24 00 7F 4A 95 A9 8A D0 AD 1A D2 AD 3A D6 B2 2B 24 B3 FB 40 B4 1B 42 B4 3B 44 B4 5B 46 B4 CB E2 BE 5B E6 BE 8B EB C3 BC 3C C3 DC 3F C7 9C 7A C7 BC 7C C7 DC 7E C7 FC 80 C8 1D 36 D3 7D 38 D3 9D 3A D3 BD 3C DA BD AC DA DD C9 DC AD CD DC ED D0 DD 2E 08 E0 9E 0A E0 BE 0C E0 DE 0E E0 FE 10 E1 1E 12 E1 3E 14 E1 5E 16 E1 7E 18 F4 6F 47 F4 8F 49 F4 AF 4B F4 CF 4D F4 EF 4F F5 0F 51 FF 3F F4 FF 5F F7 FF FF 00 63 2F 02 05 EC 0F 8C 0F FC 0F E1 00 00 48'
# data1 = data.split(' ')
# print(len(data1))
# crc = crc32(bytes(data1))
# print(hex(crc))

wb_data = [32, 0, 255, 0, 0, 11, 1, 32, 24, 1, 224, 35, 2, 112, 43, 2, 240, 51, 3, 160, 65, 4, 128, 79, 5, 96, 94, 6, 80, 102, 6, 112, 104, 6, 144, 106, 6, 176, 241, 15, 33, 121, 23, 161, 123, 23, 193, 125, 23, 225, 234, 30, 177, 236, 30, 209, 238, 30, 241, 240, 31, 17, 242, 31, 49, 255, 32, 2, 1, 32, 34, 3, 32, 66, 97, 38, 35, 4, 48, 83, 6, 48, 115, 8, 48, 147, 10, 48, 179, 145, 57, 35, 147, 57, 67, 149, 57, 99, 151, 57, 131, 250, 63, 179, 252, 63, 211, 254, 63, 244, 0, 64, 20, 2, 64, 52, 4, 64, 84, 6, 64, 116, 8, 64, 148, 10, 64, 180, 12, 64, 212, 14, 64, 244, 16, 65, 20, 18, 65, 52, 20, 65, 84, 22, 65, 116, 24, 65, 148, 26, 65, 180, 28, 65, 212, 30, 65, 244, 32, 66, 20, 34, 66, 52, 36, 66, 84, 38, 66, 116, 40, 66, 148, 42, 66, 180, 44, 66, 212, 46, 66, 244, 48, 67, 20, 50, 67, 52, 52, 67, 84, 54, 67, 116, 56, 67, 148, 58, 67, 180, 60, 67, 212, 62, 67, 244, 64, 68, 20, 66, 68, 52, 68, 68, 84, 70, 68, 116, 72, 68, 148, 74, 68, 180, 76, 68, 212, 78, 68, 244, 80, 69, 20, 82, 69, 52, 84, 69, 84, 86, 69, 116, 88, 69, 148, 90, 69, 180, 92, 69, 212, 94, 69, 244, 96, 70, 20, 98, 70, 33, 0, 255, 52, 100, 70, 84, 102, 70, 116, 104, 70, 148, 106, 70, 180, 108, 70, 212, 110, 70, 244, 112, 71, 20, 114, 71, 52, 116, 71, 84, 118, 71, 116, 120, 71, 148, 122, 71, 180, 124, 71, 212, 126, 71, 244, 128, 72, 20, 130, 72, 52, 132, 72, 84, 134, 72, 116, 136, 72, 148, 138, 72, 180, 140, 72, 212, 142, 72, 244, 144, 73, 20, 146, 73, 52, 148, 73, 84, 150, 73, 116, 152, 73, 148, 154, 73, 180, 156, 73, 212, 158, 73, 255, 71, 244, 191, 76, 244, 223, 78, 244, 255, 80, 245, 31, 82, 245, 63, 84, 245, 95, 86, 245, 127, 88, 245, 159, 92, 246, 47, 105, 247, 31, 121, 248, 63, 141, 249, 143, 165, 0, 0, 28, 2, 208, 60, 4, 160, 86, 6, 16, 108, 7, 96, 129, 9, 16, 162, 11, 64, 197, 13, 112, 234, 15, 192, 253, 15, 224, 255, 16, 1, 1, 16, 33, 123, 23, 193, 125, 23, 225, 127, 24, 1, 129, 24, 33, 131, 31, 81, 246, 31, 113, 248, 31, 145, 250, 31, 177, 252, 31, 209, 254, 43, 146, 188, 43, 210, 190, 43, 243, 22, 49, 115, 24, 49, 147, 26, 49, 179, 28, 49, 211, 30, 49, 243, 32, 58, 115, 168, 58, 147, 170, 58, 179, 172, 58, 211, 174, 66, 180, 44, 66, 212, 46, 66, 244, 48, 67, 20, 50, 67, 52, 52, 67, 84, 54, 67, 116, 56, 83, 213, 62, 83, 245, 64, 84, 21, 34, 0, 255, 66, 84, 53, 68, 84, 85, 70, 84, 117, 72, 84, 149, 74, 84, 182, 72, 100, 150, 74, 100, 182, 76, 100, 214, 78, 100, 246, 80, 101, 22, 82, 101, 54, 84, 101, 86, 86, 117, 55, 84, 117, 87, 86, 117, 119, 88, 117, 151, 90, 117, 183, 92, 117, 215, 94, 117, 247, 96, 118, 23, 98, 118, 55, 100, 137, 24, 146, 137, 56, 148, 137, 88, 150, 137, 120, 152, 137, 152, 154, 137, 184, 156, 137, 216, 158, 152, 9, 129, 152, 41, 131, 152, 73, 133, 152, 105, 135, 152, 137, 137, 152, 169, 139, 152, 201, 141, 152, 233, 143, 168, 138, 137, 168, 170, 139, 168, 202, 141, 168, 234, 143, 169, 10, 145, 169, 42, 147, 169, 74, 149, 169, 106, 151, 186, 27, 162, 186, 59, 164, 186, 91, 166, 186, 123, 168, 186, 155, 170, 186, 187, 172, 186, 219, 174, 186, 251, 176, 187, 28, 214, 205, 124, 216, 205, 156, 218, 205, 188, 220, 205, 220, 222, 205, 252, 224, 206, 28, 226, 206, 60, 228, 206, 92, 230, 206, 124, 232, 206, 156, 234, 206, 188, 236, 206, 220, 238, 206, 252, 240, 207, 28, 242, 207, 60, 244, 207, 92, 246, 207, 124, 248, 207, 156, 250, 207, 188, 252, 254, 47, 227, 254, 79, 229, 254, 111, 231, 254, 143, 233, 254, 175, 235, 254, 207, 237, 254, 239, 239, 255, 15, 241, 255, 47, 243, 255, 79, 245, 255, 111, 247, 255, 143, 249, 255, 175, 251, 35, 0, 255, 0, 0, 29, 2, 240, 63, 4, 208, 89, 6, 80, 112, 7, 176, 134, 9, 112, 168, 11, 160, 204, 13, 240, 243, 16, 81, 6, 16, 113, 8, 16, 145, 10, 16, 177, 117, 23, 97, 119, 23, 129, 121, 23, 161, 123, 23, 193, 135, 30, 177, 236, 30, 209, 238, 30, 241, 240, 31, 17, 242, 31, 49, 244, 42, 210, 176, 43, 18, 178, 43, 51, 4, 48, 83, 6, 48, 115, 8, 48, 147, 10, 48, 179, 12, 48, 211, 23, 57, 19, 146, 57, 51, 148, 57, 83, 150, 57, 115, 157, 65, 20, 18, 65, 52, 20, 65, 84, 22, 65, 116, 24, 65, 148, 26, 65, 180, 28, 65, 212, 30, 81, 229, 31, 82, 5, 33, 82, 37, 35, 82, 69, 37, 82, 101, 39, 82, 133, 41, 82, 165, 43, 82, 198, 45, 98, 230, 47, 99, 6, 49, 99, 38, 51, 99, 70, 53, 99, 102, 55, 99, 134, 57, 99, 166, 59, 115, 231, 63, 116, 7, 65, 116, 39, 67, 116, 71, 69, 116, 103, 71, 116, 135, 73, 116, 167, 75, 116, 199, 77, 116, 231, 79, 136, 56, 132, 136, 88, 134, 136, 120, 136, 136, 152, 138, 136, 184, 140, 136, 216, 142, 136, 248, 144, 151, 41, 115, 151, 73, 117, 151, 105, 119, 151, 137, 121, 151, 169, 123, 151, 201, 125, 151, 233, 127, 152, 9, 129, 168, 26, 130, 168, 58, 132, 168, 90, 134, 168, 122, 136, 168, 154, 138, 168, 186, 140, 168, 36, 0, 127, 218, 142, 168, 250, 144, 185, 91, 150, 185, 123, 152, 185, 155, 154, 185, 187, 156, 185, 219, 158, 185, 251, 160, 186, 27, 162, 186, 59, 164, 186, 92, 212, 205, 92, 214, 205, 124, 216, 205, 156, 218, 205, 188, 220, 205, 220, 222, 205, 252, 224, 206, 28, 226, 206, 60, 228, 206, 92, 230, 206, 124, 232, 206, 156, 234, 206, 188, 236, 206, 220, 238, 206, 252, 240, 207, 28, 242, 207, 60, 244, 207, 92, 246, 207, 124, 248, 207, 156, 250, 247, 191, 124, 247, 223, 126, 247, 255, 128, 248, 31, 130, 248, 63, 133, 248, 127, 136, 248, 159, 139, 248, 207, 142, 248, 255, 144, 249, 47, 147, 249, 95, 150, 249, 143, 153, 249, 191, 157, 255, 255, 0, 66, 47, 2, 5, 176, 15, 252, 15, 160, 15, 225, 0, 0, 112]
hex_string = ' '.join([format(num, '02X') for num in wb_data])

crc = crc32(bytes(wb_data))
print(hex(crc))

update_crc = [32, 0, 255, 0, 0, 1, 0, 32, 3, 0, 64, 5, 0, 96, 7, 0, 128, 9, 0, 160, 11, 0, 192, 13, 0, 224, 15, 1, 0, 17, 1, 32, 19, 1, 64, 21, 1, 96, 23, 1, 128, 25, 2, 160, 28, 8, 16, 130, 8, 49, 167, 26, 129, 169, 26, 161, 171, 26, 193, 173, 26, 225, 175, 27, 1, 177, 27, 33, 179, 27, 65, 249, 31, 162, 150, 41, 115, 45, 50, 227, 48, 51, 19, 50, 51, 51, 52, 51, 83, 54, 51, 115, 56, 51, 147, 58, 51, 179, 60, 51, 211, 73, 53, 35, 83, 53, 67, 85, 53, 99, 87, 53, 131, 89, 53, 163, 91, 53, 195, 93, 53, 227, 95, 54, 3, 97, 54, 35, 99, 54, 67, 101, 54, 99, 103, 54, 131, 105, 54, 163, 107, 54, 195, 109, 54, 227, 111, 55, 3, 113, 55, 35, 115, 55, 67, 117, 55, 99, 119, 55, 131, 121, 55, 163, 123, 55, 195, 125, 55, 227, 127, 56, 3, 129, 56, 35, 131, 56, 67, 133, 56, 99, 135, 56, 131, 137, 56, 163, 139, 56, 195, 141, 56, 227, 143, 57, 3, 145, 57, 35, 147, 57, 67, 149, 57, 99, 151, 57, 131, 153, 57, 163, 155, 57, 195, 157, 57, 227, 159, 58, 3, 161, 58, 35, 163, 58, 67, 165, 58, 99, 167, 58, 131, 169, 58, 163, 171, 58, 195, 173, 58, 227, 175, 59, 3, 177, 59, 35, 179, 59, 67, 181, 59, 99, 183, 59, 131, 185, 59, 33, 0, 255, 163, 187, 59, 195, 189, 59, 227, 191, 60, 3, 193, 60, 44, 98, 198, 60, 100, 198, 92, 102, 198, 124, 104, 198, 156, 106, 198, 188, 108, 198, 220, 110, 198, 252, 115, 199, 172, 131, 200, 204, 149, 201, 252, 170, 202, 188, 172, 202, 220, 174, 202, 252, 176, 203, 28, 178, 212, 141, 74, 212, 189, 76, 212, 221, 78, 212, 253, 80, 213, 29, 202, 220, 205, 205, 220, 237, 207, 221, 29, 210, 221, 61, 212, 221, 109, 215, 221, 142, 114, 231, 62, 116, 231, 94, 118, 231, 126, 120, 231, 158, 223, 238, 14, 245, 240, 79, 5, 240, 111, 7, 240, 159, 10, 240, 191, 12, 240, 223, 14, 240, 255, 16, 241, 31, 116, 247, 95, 118, 0, 0, 1, 0, 32, 3, 0, 64, 5, 0, 96, 7, 0, 128, 9, 0, 160, 11, 0, 192, 13, 0, 224, 15, 1, 0, 17, 1, 32, 19, 1, 64, 21, 1, 96, 23, 1, 128, 25, 1, 160, 27, 1, 194, 20, 33, 82, 22, 33, 114, 24, 33, 146, 26, 33, 178, 28, 33, 210, 30, 33, 242, 32, 34, 18, 34, 34, 51, 38, 50, 115, 60, 51, 211, 62, 52, 51, 68, 52, 83, 70, 52, 115, 72, 52, 147, 74, 52, 179, 76, 52, 211, 78, 52, 243, 80, 53, 19, 82, 73, 132, 153, 73, 164, 155, 73, 196, 157, 73, 228, 159, 74, 4, 161, 74, 36, 163, 74, 68, 165, 74, 100, 167, 74, 132, 169, 74, 164, 34, 0, 255, 171, 96, 118, 8, 96, 150, 10, 96, 182, 12, 96, 214, 14, 96, 246, 16, 97, 22, 18, 97, 54, 20, 97, 86, 22, 97, 118, 24, 97, 150, 26, 97, 183, 133, 120, 103, 135, 120, 135, 137, 120, 167, 139, 120, 199, 141, 120, 231, 143, 121, 7, 145, 121, 39, 147, 136, 40, 131, 136, 72, 133, 136, 104, 135, 136, 136, 137, 136, 168, 139, 136, 200, 141, 136, 232, 143, 151, 73, 117, 151, 105, 119, 151, 137, 121, 151, 169, 123, 151, 201, 125, 151, 233, 127, 152, 9, 129, 152, 41, 131, 152, 73, 133, 152, 105, 135, 152, 137, 137, 152, 169, 139, 152, 201, 141, 152, 233, 143, 153, 9, 145, 153, 41, 147, 153, 73, 149, 153, 105, 151, 153, 137, 153, 153, 169, 155, 153, 201, 157, 153, 236, 237, 206, 236, 239, 207, 12, 241, 207, 44, 243, 207, 76, 245, 207, 108, 247, 207, 140, 249, 207, 172, 251, 207, 204, 253, 207, 236, 255, 208, 13, 1, 208, 45, 3, 208, 77, 5, 208, 109, 7, 208, 141, 9, 208, 173, 147, 217, 77, 149, 217, 109, 151, 217, 141, 153, 217, 173, 155, 225, 222, 30, 225, 254, 32, 226, 30, 34, 226, 62, 36, 226, 94, 38, 226, 126, 40, 235, 174, 187, 235, 206, 189, 235, 238, 191, 236, 14, 193, 242, 127, 40, 243, 175, 71, 244, 143, 73, 244, 175, 75, 244, 207, 77, 244, 239, 79, 245, 15, 81, 245, 47, 83, 255, 175, 251, 35, 0, 255, 0, 0, 1, 0, 32, 3, 0, 64, 5, 0, 96, 7, 0, 128, 9, 0, 160, 11, 0, 192, 13, 0, 224, 15, 1, 0, 17, 1, 32, 19, 1, 64, 21, 1, 112, 24, 1, 144, 26, 1, 176, 28, 6, 210, 9, 32, 162, 11, 32, 194, 13, 32, 226, 15, 33, 2, 17, 33, 34, 19, 33, 66, 21, 33, 98, 23, 33, 131, 23, 49, 131, 34, 50, 51, 36, 50, 131, 41, 50, 163, 43, 50, 195, 45, 50, 227, 47, 51, 3, 49, 51, 35, 51, 51, 67, 53, 51, 99, 55, 71, 84, 118, 71, 116, 120, 71, 148, 122, 71, 180, 124, 71, 212, 126, 71, 244, 128, 72, 20, 130, 72, 52, 132, 72, 84, 134, 72, 116, 136, 94, 245, 240, 95, 21, 242, 95, 53, 244, 95, 85, 246, 95, 117, 248, 95, 149, 250, 95, 181, 252, 95, 213, 254, 95, 246, 0, 96, 22, 2, 96, 55, 120, 119, 151, 122, 119, 183, 124, 119, 215, 126, 119, 247, 128, 120, 23, 130, 120, 55, 132, 120, 87, 134, 135, 216, 126, 135, 248, 128, 136, 24, 130, 136, 56, 132, 136, 88, 134, 136, 120, 136, 136, 152, 138, 151, 73, 117, 151, 105, 119, 151, 137, 121, 151, 169, 123, 151, 201, 125, 151, 233, 127, 152, 9, 129, 152, 41, 131, 152, 73, 133, 152, 105, 135, 152, 137, 137, 152, 169, 139, 152, 201, 141, 152, 233, 143, 153, 9, 145, 153, 41, 147, 153, 73, 149, 153, 36, 0, 127, 105, 151, 153, 137, 153, 153, 169, 155, 153, 201, 157, 153, 236, 138, 200, 188, 140, 200, 220, 142, 200, 252, 144, 201, 28, 146, 201, 60, 148, 201, 92, 150, 201, 124, 152, 201, 156, 154, 201, 188, 156, 201, 220, 158, 201, 252, 160, 202, 28, 162, 202, 60, 164, 202, 92, 166, 202, 205, 63, 212, 13, 65, 212, 45, 67, 212, 77, 69, 212, 109, 74, 219, 253, 193, 220, 45, 195, 220, 77, 198, 220, 125, 200, 220, 157, 203, 220, 205, 210, 230, 142, 105, 230, 174, 107, 230, 206, 109, 230, 238, 113, 237, 30, 210, 238, 110, 244, 239, 110, 247, 239, 142, 249, 239, 174, 251, 239, 206, 253, 239, 239, 0, 240, 31, 5, 252, 15, 193, 255, 255, 0, 215, 47, 2, 5, 220, 15, 252, 15, 196, 15, 225, 0, 0, 32]
crc = crc32(bytes(update_crc))
print(hex(crc))
print(len(update_crc))

a
b = ['83 B9 3B 21 00 FF A3 BB 3B C3 BD 3B E3 BF 3C 03 C1 3C 2C 62 C6 3C 64 C6 5C 66 C6 7C 68 C6 9C 6A C6 BC 6C C6 DC 6E C6 FC 73 C7 AC 83 C8 CC 95 C9 FC AA CA BC AC CA DC AE CA FC B0 CB 1C B2 D4 8D 4A D4 BD 4C D4 DD 4E D4 FD 50 D5 1D CA DC CD CD DC ED CF DD 1D D2 DD 3D D4 DD 6D D7 DD 8E 72 E7 3E 74 E7 5E 76 E7 7E 78 E7 9E DF EE 0E F5 F0 4F 05 F0 6F 07 F0 9F 0A F0 BF 0C F0 DF 0E F0 FF 10 F1 1F 74 F7 5F 76 00 00 01 00 20 03 00 40 05 00 60 07 00 80 09 00 A0 0B 00 C0 0D 00 E0 0F 01 00 11 01 20 13 01 40 15 01 60 17 01 80 19 01 A0 1B 01 C2 14 21 52 16 21 72 18 21 92 1A 21 B2 1C 21 D2 1E 21 F2 20 22 12 22 22 33 26 32 73 3C 33 D3 3E 34 33 44 34 53 46 34 73 48 34 93 4A 34 B3 4C 34 D3 4E 34 F3 50 35 13 52 49 84 99 49 A4 9B 49 C4 9D 49 E4 9F 4A 04 A1 4A 24 A3 4A 44 A5 4A 64']
c
d = ['F5 0F 51 F5 2F 53 FF AF FB 23 00 FF 00 00 01 00 20 03 00 40 05 00 60 07 00 80 09 00 A0 0B 00 C0 0D 00 E0 0F 01 00 11 01 20 13 01 40 15 01 70 18 01 90 1A 01 B0 1C 06 D2 09 20 A2 0B 20 C2 0D 20 E2 0F 21 02 11 21 22 13 21 42 15 21 62 17 21 83 17 31 83 22 32 33 24 32 83 29 32 A3 2B 32 C3 2D 32 E3 2F 33 03 31 33 23 33 33 43 35 33 63 37 47 54 76 47 74 78 47 94 7A 47 B4 7C 47 D4 7E 47 F4 80 48 14 82 48 34 84 48 54 86 48 74 88 5E F5 F0 5F 15 F2 5F 35 F4 5F 55 F6 5F 75 F8 5F 95 FA 5F B5 FC 5F D5 FE 5F F6 00 60 16 02 60 37 78 77 97 7A 77 B7 7C 77 D7 7E 77 F7 80 78 17 82 78 37 84 78 57 86 87 D8 7E 87 F8 80 88 18 82 88 38 84 88 58 86 88 78 88 88 98 8A 97 49 75 97 69 77 97 89 79 97 A9 7B 97 C9 7D 97 E9 7F 98 09 81 98 29 83 98 49 85 98 69 87 98 89 89 98 A9 8B 98 C9 8D 98']
e = ['E9 8F 99 09 91 99 29 93 99 49 95 99 24 00 7F 69 97 99 89 99 99 A9 9B 99 C9 9D 99 EC 8A C8 BC 8C C8 DC 8E C8 FC 90 C9 1C 92 C9 3C 94 C9 5C 96 C9 7C 98 C9 9C 9A C9 BC 9C C9 DC 9E C9 FC A0 CA 1C A2 CA 3C A4 CA 5C A6 CA CD 3F D4 0D 41 D4 2D 43 D4 4D 45 D4 6D 4A DB FD C1 DC 2D C3 DC 4D C6 DC 7D C8 DC 9D CB DC CD D2 E6 8E 69 E6 AE 6B E6 CE 6D E6 EE 71 ED 1E D2 EE 6E F4 EF 6E F7 EF 8E F9 EF AE FB EF CE FD EF EF 00 F0 1F 05 FC 0F C1 FF FF 00 D7 2F 02 05 DC 0F FC 0F C4 0F E1 00 00 20']

dgc_table
result = dgc_table.split(' ')
if '' in result:
    result.remove('')
white_balance_value = iterable_str_to_hex(result)
print(white_balance_value)
print(len(white_balance_value))
